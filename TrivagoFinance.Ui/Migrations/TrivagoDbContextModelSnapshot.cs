// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrivagoFinance.Ui.Data;

namespace TrivagoFinance.Ui.Migrations
{
    [DbContext(typeof(TrivagoDbContext))]
    partial class TrivagoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TrivagoFinance.Ui.Data.DomainModels.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AprovalStatus");

                    b.Property<string>("PhotoPath");

                    b.Property<decimal>("Price");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("TrivagoFinance.Ui.Data.DomainModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Department");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName");

                    b.Property<string>("PasswordHash");

                    b.Property<int>("UserRole");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = 9,
                            Email = "employee@trivago.com",
                            FirstName = "John",
                            LastName = "Do",
                            PasswordHash = "2FDC0177057D3A5C6C2C0821E01F4FA8D90F9A3BB7AFD82B0DB526AF98D68DE8",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 2,
                            Department = 9,
                            Email = "lead@trivago.com",
                            FirstName = "Lead",
                            LastName = "TeachLeadGuy",
                            PasswordHash = "E3456BC1F4D270F4A97933758645FDC21E39642B31CA343C1818F7972AC27906",
                            UserRole = 2
                        },
                        new
                        {
                            Id = 3,
                            Department = 7,
                            Email = "finance@trivago.com",
                            FirstName = "Finance",
                            LastName = "FinanceGuy",
                            PasswordHash = "EAB762A03FD979A04CC4706E6536D382BC89D2D1356AFCD054A16B2235ECD471",
                            UserRole = 3
                        },
                        new
                        {
                            Id = 4,
                            Department = 9,
                            Email = "employee2@trivago.com",
                            FirstName = "John",
                            LastName = "Smith",
                            PasswordHash = "e823a44aca1edda7551208a4c1c1559f61d30a821862b311df3a76ab2b901bce",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 5,
                            Department = 9,
                            Email = "employee3@trivago.com",
                            FirstName = "Rebeka",
                            LastName = "Week",
                            PasswordHash = "e823a44aca1edda7551208a4c1c1559f61d30a821862b311df3a76ab2b901bce",
                            UserRole = 1
                        });
                });

            modelBuilder.Entity("TrivagoFinance.Ui.Data.DomainModels.Expense", b =>
                {
                    b.HasOne("TrivagoFinance.Ui.Data.DomainModels.User", "User")
                        .WithMany("Expenses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
